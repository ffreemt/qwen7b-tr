# https://cloud.tencent.com/developer/article/1970730
# name: .NET Core Release
name: Nuitka Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "test*"  # for testing
      - "v*"  # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
        poetry-version: [1.5.1]
        # os: [ubuntu-20.04, macos-latest, windows-latest]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    # runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install dependencies
        run: poetry install

      # https://github.com/marketplace/actions/build-executables-or-extension-modules-from-python-projects#usage-details
      - uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: hello_world.py
          onefile: true

      # Uploads artifact
      # - name: Upload Artifact
        # uses: actions/upload-artifact@v3
        # with:
          # name: exe
          # path: build/hello_world.exe

      # - name: python -m nuitka --standalone
        # run: poetry run python -m nuitka --standalone qwen7b_tr

      # - name: Zip the Build
        # run: zip -r ${{ secrets.ReleaseZipName }} ./AppName/bin/Release/netcoreapp3.1/

      # - name: Create Release
        # id: create_release
        # uses: actions/create-release@v1
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # with:
          # tag_name: ${{ github.ref }}
          # release_name: Release ${{ github.ref }}
          # body: TODO New Release.
          # draft: false
          # prerelease: false

      # - name: Upload Release Asset
        # uses: actions/upload-release-asset@v1
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # with:
          # upload_url: ${{ steps.create_release.outputs.upload_url }}
          # asset_path: ./${{ secrets.ReleaseZipName }}.zip
          # asset_name: ${{ secrets.ReleaseZipName }}.zip
          # asset_content_type: application/zip
